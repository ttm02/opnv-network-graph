import datetime
import json
import difflib
import pickle

from network import Network

network = Network()

#TODO code duplication
# function is generated by AI
def find_closest_key_by_name(target_name, data):
    # Create a mapping of names to keys
    name_to_key = {v['Name']: k for k, v in data.items()}

    # Try exact match first
    if target_name in name_to_key:
        return name_to_key[target_name]

    # Find the closest match using difflib
    closest_match = difflib.get_close_matches(target_name, name_to_key.keys(), n=1, cutoff=0.5)

    if closest_match:
        return name_to_key[closest_match[0]]  # Return the key of the closest match
    return None  # No close match found

print("Load from json")

# Load JSON
with open('network.json', 'r') as f:
    network.set_stops(json.load(f))
with open('stations.json', 'r') as f:
    all_stops =json.load(f)

print("Compute reachable stations")

luisenplatz = find_closest_key_by_name("Darmstadt Luisenplatz", all_stops)
time_limit=30
start_time= 9*60 #09:00

reachable = network.get_reachable_stations_in_time(luisenplatz, start_time, time_limit)
print(reachable)
print(len(reachable))

for station in reachable:
    name = all_stops[station]['Name']
    print (name)


